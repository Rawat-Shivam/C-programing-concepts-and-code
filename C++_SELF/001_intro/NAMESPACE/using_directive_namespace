
"Using" directive
This same behavior (same as inline namesapces) can also be achieved by using the "using" declarative inside namespaces. A using-directive that names the inline namespace is implicitly inserted in the enclosing namespace (similar to the implicit using-directive for the unnamed namespace)

// "using" to get the same effect as inline. 
#include <iostream> 
using namespace std; 
namespace ns1 
{ 
	namespace ns2 
	{ 
		namespace ns3 
		{ 
			int var = 10; 
		} 
		using namespace ns3; 
	} 
	using namespace ns2; 
} 
int main() 
{ 
	cout << ns1::var; 
	return 0; 
} 

Here again, the using directive makes the declarations from the nested namespace appear exactly as if they had been declared in the enclosing namespace.




