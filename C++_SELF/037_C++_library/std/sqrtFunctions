


sqrt, sqrtl and sqrtf in C++
The cmath header defines two more inbuilt functions for calculating square root of a number (apart from sqrt which takes double as an argument) which has an argument of type float and long double.

double sqrt(double arg): It returns the square root of a number to type double
Syntax : double sqrt(double arg)

 double val1 = 225.0; 
    double val2 = 300.0; 
  
    cout << fixed << setprecision(12) << sqrt(val1) << endl; 
    cout << fixed << setprecision(12) << sqrt(val2) << endl; 
15.000000000000
17.320508075689





If we pass a negative value in the argument domain error occurs. and the output will be the Square root of -a is -nan.
#include <iostream> 
#include <cmath> 
using namespace std; 
  
int main() 
{ 
    double a = -2 ,  answer; 
          
    answer = sqrt(a); 
    cout << "Square root of " << a  
         << " is " << answer << endl; 
  
    return 0; 
} 
Output:

Square root of -2 is -nan





float sqrtf(float arg): It returns the square root of a number to type float
Syntax : float sqrtf(float arg)




long double sqrtl(long double arg): It returns the square root of a number to type long double with more precision. Advantage of using this function is that when working with integers of the order 1018, calculating its square root with sqrt function may give an incorrect answer due to precision errors as default functions in programming language works with floats/doubles. But this will always give an accurate answer.
Syntax : long double sqrtl(long double arg)





















